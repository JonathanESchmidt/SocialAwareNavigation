local_costmap:
  # Coordinate frame and tf parameters
  global_frame: odom
  robot_base_frame: base_link
  transform_tolerance: 1.0  # Specifies the delay in transform (tf) data that is tolerable in seconds.
                            # This parameter serves as a safeguard to losing a link in the tf tree while
                            # still allowing an amount of latency the user is comfortable with to exist
                            # in the system. For example, a transform being 0.2 seconds out-of-date may
                            # be tolerable, but a transform being 8 seconds out of date is not. If the
                            # tf transform between the coordinate frames specified by the global_frame
                            # and robot_base_frame parameters is transform_tolerance seconds older than
                            # ros::Time::now(), then the navigation stack will stop the robot. Default: 0.2

  # Rate parameters
  update_frequency: 10.0    # The frequency in Hz for the map to be updated. Default 5.0
  publish_frequency: 10.0   # The frequency in Hz for the map to be publish display information. Default: 0.0

  #static_map: true

  # Map management parameters
  rolling_window: true      # Whether or not to use a rolling window version of the costmap.
                            # If the static_map parameter is set to true, this parameter must be set to false.
                            # "Rolling window" means that you do not use the costmap to represent your
                            # complete environment, but only to represent your local surroundings
                            # (e.g. 5m x 5m around your robot). The costmap will then move along with
                            # your robot and will be updated by incoming sensor data.
  width: 8                  # The width of the map in meters. Default: 10
  height: 8                 # The height of the map in meters. Default: 10
  resolution: 0.05          # The resolution of the map in meters/cell. Default: 0.05

  # Inflation layer
  # cost_scaling_factor: 10.0 # Default: 10.0
  inflation_radius: 0.4     # Inflation of objects picked up by the laser scanners e.g. humans

  plugins:
     - {name: static_map,       type: "costmap_2d::StaticLayer"}
     - {name: obstacles,        type: "costmap_2d::VoxelLayer"}
     - {name: inflation_layer,  type: "costmap_2d::InflationLayer"}
     - {name: social_layer,     type: "social_navigation_layers::ProxemicLayer"}